{"version":3,"file":"static/js/900.dba5ef30.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contactsRedux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 54%;\n  left: 50%;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  max-height: 400px;\n  padding: 45px;\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    margin: -10px;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 225px;\n    padding: 35px;\n  }\n\n  @media screen and (max-width: 400px) {\n    width: 200px;\n    padding: 25px;\n  }\n`;\n\nexport const FormTitle = styled.h4`\n  font-weight: 500;\n  color: #fff;\n  opacity: 0.7;\n  font-size: 24px;\n  margin-top: 0;\n  margin-bottom: 60px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  @media screen and (max-width: 768px) {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (max-width: 400px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Input = styled.input`\n  font-weight: 500;\n  font-size: 16px;\n  padding: 15px;\n  margin-bottom: 35px;\n  color: #fff;\n  background: transparent;\n  backdrop-filter: blur(5px);\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n\n  &::placeholder {\n    font-weight: 400;\n    color: #fff;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 500;\n  font-size: 16px;\n  width: 200px;\n  margin: 0 auto;\n  padding: 15px;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n    width: 150px;\n  }\n`;\n\nconst Drop = styled.div`\n  position: absolute;\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 10px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 10px 10px 60px -8px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n`;\n\nexport const DropFirst = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  top: -30px;\n  left: -20px;\n\n  @media screen and (min-width: 768px) {\n    z-index: -1;\n  }\n`;\n\nexport const DropSecond = styled(Drop)`\n  height: 80px;\n  width: 80px;\n  bottom: -40px;\n  right: -20px;\n`;\n\nexport const DropThird = styled(Drop)`\n  height: 100px;\n  width: 100px;\n  bottom: 140px;\n  right: -30px;\n  z-index: -1;\n`;\n\nexport const DropForth = styled(Drop)`\n  height: 120px;\n  width: 120px;\n  top: -50px;\n  right: -50px;\n\n  @media screen and (max-width: 768px) {\n    height: 100px;\n    width: 100px;\n    right: -30px;\n    z-index: -1;\n  }\n`;\n\nexport const DropFifth = styled(Drop)`\n  height: 60px;\n  width: 60px;\n  bottom: 70px;\n  left: -30px;\n  z-index: -1;\n`;\n","import styled from 'styled-components';\nimport { Button } from 'components/RegisterForm/RegisterForm.styled';\n\nexport const Form = styled.form`\n  width: 40%;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 20px;\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n\n  @media screen and (max-width: 1024px) {\n    width: 60%;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  color: #fff;\n  opacity: 0.7;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Input = styled.input`\n  width: 60%;\n  padding: 15px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: #fff;\n  background: transparent;\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  backdrop-filter: blur(5px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n    outline: none;\n  }\n\n  @media screen and (max-width: 400px) {\n    width: 80%;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  margin-top: 20px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const selectFilter = state => state.filter;\n","import { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contactsRedux/selectors';\nimport { addContact } from 'redux/contactsRedux/operations';\nimport { errorMessage, successMessage } from 'services/notifications';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const checkAvailability = name =>\n    contacts.find(contact => contact.name === name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkAvailability(name)) {\n      return errorMessage(`${name} is already in contacts`);\n    }\n    if (name.length > 20 || name.length < 3) {\n      return errorMessage(`Please enter a valid name!`);\n    }\n    if (number.length > 20 || number.length < 6) {\n      return errorMessage(`Please enter a valid number!`);\n    }\n\n    dispatch(addContact({ name, number }));\n    successMessage(`${name} is added to contacts`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          onChange={e => setName(e.currentTarget.value)}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={e => setNumber(e.currentTarget.value)}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Btn>Add contact</Btn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from 'components/RegisterForm/RegisterForm.styled';\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 15px;\n  color: white;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 10px;\n  box-shadow: 4px 4px 60px rgb(0 0 0 / 20%);\n  opacity: 0.8;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const P = styled.p`\n  width: 40%;\n  margin: 0;\n  padding: 0 5px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    font-size: 18px;\n    padding: 5px;\n  }\n`;\n\nexport const Span = styled.span`\n  padding-right: 5px;\n  opacity: 0.7;\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 20%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding: 2px 5px;\n    justify-content: center;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  width: 100px;\n  font-size: 18px;\n  margin: 0;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Li, P, Span, BtnWrap, Btn } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsRedux/operations';\nimport { successMessage } from 'services/notifications';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    successMessage(`${name} was delete from contacts`);\n  };\n\n  return (\n    <Li>\n      <P>\n        <Span>Name: </Span> {name}\n      </P>\n      <P>\n        <Span>Number: </Span> {number}\n      </P>\n      <BtnWrap>\n        <Btn onClick={handleDelete}>Delete</Btn>\n      </BtnWrap>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 20px auto 0;\n  padding: 20px;\n  background: transparent;\n  backdrop-filter: blur(5px);\n  border: none;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 25px;\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contactsRedux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from 'components/RegisterForm/RegisterForm.styled';\n\nexport const Form = styled.form`\n  width: 40%;\n  height: 80px;\n  margin: 0 auto;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 20px;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  text-align: center;\n\n  @media screen and (max-width: 1024px) {\n    width: 60%;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  opacity: 0.7;\n  gap: 5px;\n\n  @media screen and (max-width: 400px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputStyled = styled(Input)`\n  position: relative;\n  width: 60%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 400px) {\n    width: 80%;\n  }\n`;\n","import { Form, Label, InputStyled } from './ContactFilter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contactsRedux/filterSlice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Form>\n      <Label>\n        Find contacts by name\n        <InputStyled\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"filter\"\n          title=\"Find contacts by name\"\n        />\n      </Label>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.section`\n  max-width: 60%;\n  margin: 0px auto;\n  padding: 40px;\n\n  @media screen and (max-width: 400px) {\n    max-width: 80%;\n  }\n`;\n\nexport const ContactsTitle = styled.h3`\n  font-size: 30px;\n  margin: 0px auto 40px;\n  color: white;\n  opacity: 0.7;\n  text-align: center;\n`;\n\nexport const ContactsListTitle = styled.h3`\n  font-size: 20px;\n  margin: 40px auto 20px;\n  color: white;\n  opacity: 0.7;\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contactsRedux/operations';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\nimport {\n  ContactsWrapper,\n  ContactsTitle,\n  ContactsListTitle,\n} from './ContactsPage.styled';\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contactsRedux/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsWrapper>\n      <ContactsTitle>Phone Book</ContactsTitle>\n      <ContactForm />\n      {isLoading && !error && <Loader loading={isLoading} />}\n      {contacts.length > 0 && (\n        <>\n          <ContactsListTitle>Contacts</ContactsListTitle>\n          <ContactFilter />\n          <ContactList />\n        </>\n      )}\n    </ContactsWrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","Form","FormTitle","Input","Button","Drop","DropFirst","DropSecond","DropThird","DropForth","DropFifth","Label","Btn","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","selectFilter","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","find","contact","checkAvailability","errorMessage","length","addContact","successMessage","autoComplete","onChange","currentTarget","value","type","pattern","title","required","Li","P","Span","BtnWrap","ContactItem","id","onClick","deleteContact","List","ContactList","map","InputStyled","ContactFilter","setFilter","ContactsWrapper","ContactsTitle","ContactsListTitle","useEffect","fetchContacts","Loader","loading"],"sourceRoot":""}